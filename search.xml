<?xml version="1.0" encoding="utf-8"?>
<search> 
  
  
    
    <entry>
      <title>Set排序方法</title>
      <link href="/2019/04/22/work/Set%E6%8E%92%E5%BA%8F%E6%96%B9%E6%B3%95/"/>
      <url>/2019/04/22/work/Set%E6%8E%92%E5%BA%8F%E6%96%B9%E6%B3%95/</url>
      
        <content type="html"><![CDATA[<blockquote><p>在讲解Set集合排序的几种方法之前，我们应该先清楚Set集合的几种类型以及特点，才能有效使用起来。</p></blockquote><h4 id="Set集合的特点"><a href="#Set集合的特点" class="headerlink" title="Set集合的特点"></a>Set集合的特点</h4><p>​    Set不允许包含相同的元素，如果试图把两个相同元素加入同一个集合中，add方法返回false。<br>​    Set判断两个对象相同不是使用==运算符，而是根据equals方法。也就是说，<strong>只要两个对象用equals方法比较返回true，Set就不会同时接受这两个对象</strong>。</p><h4 id="Set集合的分类"><a href="#Set集合的分类" class="headerlink" title="Set集合的分类"></a>Set集合的分类</h4><p>Set集合主要分为3种：</p><p>​                     |——SortedSet接口——TreeSet实现类</p><p>Set接口——|——HashSet实现类                </p><p>​                     |——LinkedHashSet实现类</p><ul><li>HashSet（无序，可null）</li></ul><p>HashSet的特点是不能保证元素的排列顺序，顺序有可能发生变化，集合元素可以是null,但只能放入一个null。因为在HashSet中存入一个元素的时候，会调用该对象的hashCode()方法来得到该对象的hashCode值，然后根据 hashCode值来决定该对象在HashSet中存储位置，所以储存位置是随机的。HashSet就好像是HashMap的key。</p><ul><li>TreeSet（有元素顺序的）</li></ul><p>TreeSet是SortedSet接口的唯一实现类，TreeSet可以确保集合元素处于排序状态。TreeSet支持两种排序方式，自然排序 和定制排序，其中自然排序为默认的排序方式。<strong>一般的Set排序都会使用到TreeSet。</strong></p><ul><li>LinkedHashSet（记录插入顺序）</li></ul><p>LinkedHashSet集合同样是根据元素的hashCode值来决定元素的存储位置，但是它同时使用链表维护元素的次序。这样使得元素看起 来像是以插入顺 序保存的，也就是说，当遍历该集合时候，LinkedHashSet将会以元素的添加顺序访问集合的元素。一般的，如果让你设计一个缓存算法，LinkedHashSet就是基本的基础，利用LRU，筛选出应该淘汰的元素。</p><p>由于TreeSet是有元素顺序的，因此我们在排序的过程中都会使用TreeSet。</p><p>方法一：传统方法</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">TraditionalSetSortTest</span> </span>&#123;</span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title">main</span><span class="params">(String[] args)</span> </span>&#123;</span><br><span class="line">        Set&lt;BigDecimal&gt; set = <span class="keyword">new</span> HashSet&lt;&gt;();</span><br><span class="line">        set.add(<span class="keyword">new</span> BigDecimal(<span class="number">1.2</span>).setScale(<span class="number">2</span>, BigDecimal.ROUND_HALF_UP));</span><br><span class="line">        set.add(<span class="keyword">new</span> BigDecimal(<span class="number">2.3</span>).setScale(<span class="number">2</span>, BigDecimal.ROUND_HALF_UP));</span><br><span class="line">        set.add(<span class="keyword">new</span> BigDecimal(<span class="number">3.4</span>).setScale(<span class="number">2</span>, BigDecimal.ROUND_HALF_UP));</span><br><span class="line">        set.add(<span class="keyword">new</span> BigDecimal(<span class="number">2.4</span>).setScale(<span class="number">2</span>, BigDecimal.ROUND_HALF_UP));</span><br><span class="line">        set.add(<span class="keyword">new</span> BigDecimal(<span class="number">0.4</span>).setScale(<span class="number">2</span>, BigDecimal.ROUND_HALF_UP));</span><br><span class="line">        set.add(<span class="keyword">new</span> BigDecimal(<span class="number">9.4</span>).setScale(<span class="number">2</span>, BigDecimal.ROUND_HALF_UP));</span><br><span class="line"></span><br><span class="line">        TreeSet&lt;BigDecimal&gt; sortSet = <span class="keyword">new</span> TreeSet&lt;&gt;(<span class="keyword">new</span> Comparator&lt;BigDecimal&gt;() &#123;</span><br><span class="line">            <span class="meta">@Override</span></span><br><span class="line">            <span class="function"><span class="keyword">public</span> <span class="keyword">int</span> <span class="title">compare</span><span class="params">(BigDecimal o1, BigDecimal o2)</span> </span>&#123;</span><br><span class="line">                <span class="keyword">return</span> o1.compareTo(o2);</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;);</span><br><span class="line">        sortSet.addAll(set);</span><br><span class="line">        System.out.println(sortSet);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line">--------------------------------------------------------------------------------------------</span><br><span class="line">结果：[<span class="number">0.40</span>, <span class="number">1.20</span>, <span class="number">2.30</span>, <span class="number">2.40</span>, <span class="number">3.40</span>, <span class="number">9.40</span>]</span><br></pre></td></tr></table></figure><p>方法二：lambda表达式</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">LambdaSetSortTest</span> </span>&#123;</span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title">main</span><span class="params">(String[] args)</span> </span>&#123;</span><br><span class="line">        Set&lt;BigDecimal&gt; set = <span class="keyword">new</span> HashSet&lt;&gt;();</span><br><span class="line">        set.add(<span class="keyword">new</span> BigDecimal(<span class="number">1.2</span>).setScale(<span class="number">2</span>, BigDecimal.ROUND_HALF_UP));</span><br><span class="line">        set.add(<span class="keyword">new</span> BigDecimal(<span class="number">2.3</span>).setScale(<span class="number">2</span>, BigDecimal.ROUND_HALF_UP));</span><br><span class="line">        set.add(<span class="keyword">new</span> BigDecimal(<span class="number">3.4</span>).setScale(<span class="number">2</span>, BigDecimal.ROUND_HALF_UP));</span><br><span class="line">        set.add(<span class="keyword">new</span> BigDecimal(<span class="number">2.4</span>).setScale(<span class="number">2</span>, BigDecimal.ROUND_HALF_UP));</span><br><span class="line">        set.add(<span class="keyword">new</span> BigDecimal(<span class="number">0.4</span>).setScale(<span class="number">2</span>, BigDecimal.ROUND_HALF_UP));</span><br><span class="line">        set.add(<span class="keyword">new</span> BigDecimal(<span class="number">9.4</span>).setScale(<span class="number">2</span>, BigDecimal.ROUND_HALF_UP));</span><br><span class="line">        TreeSet&lt;BigDecimal&gt; sortedSet = <span class="keyword">new</span> TreeSet&lt;&gt;(((o1, o2) -&gt; o1.compareTo(o2)));</span><br><span class="line">        sortedSet.addAll(set);</span><br><span class="line">        System.out.println(sortedSet);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line">--------------------------------------------------------------------------------------------</span><br><span class="line">结果：[<span class="number">0.40</span>, <span class="number">1.20</span>, <span class="number">2.30</span>, <span class="number">2.40</span>, <span class="number">3.40</span>, <span class="number">9.40</span>]</span><br></pre></td></tr></table></figure><p>方法三：使用Comparator，在jdk1.8以后，Comparator有Comparator.naturalOrder()自然排序这个方法，也有Comparator.reverseOrder()相反排序的方法。</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">ComparatorSetSortTest</span> </span>&#123;</span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title">main</span><span class="params">(String[] args)</span> </span>&#123;</span><br><span class="line">        Set&lt;BigDecimal&gt; set = <span class="keyword">new</span> HashSet&lt;&gt;();</span><br><span class="line">        set.add(<span class="keyword">new</span> BigDecimal(<span class="number">1.2</span>).setScale(<span class="number">2</span>, BigDecimal.ROUND_HALF_UP));</span><br><span class="line">        set.add(<span class="keyword">new</span> BigDecimal(<span class="number">2.3</span>).setScale(<span class="number">2</span>, BigDecimal.ROUND_HALF_UP));</span><br><span class="line">        set.add(<span class="keyword">new</span> BigDecimal(<span class="number">3.4</span>).setScale(<span class="number">2</span>, BigDecimal.ROUND_HALF_UP));</span><br><span class="line">        set.add(<span class="keyword">new</span> BigDecimal(<span class="number">2.4</span>).setScale(<span class="number">2</span>, BigDecimal.ROUND_HALF_UP));</span><br><span class="line">        set.add(<span class="keyword">new</span> BigDecimal(<span class="number">0.4</span>).setScale(<span class="number">2</span>, BigDecimal.ROUND_HALF_UP));</span><br><span class="line">        set.add(<span class="keyword">new</span> BigDecimal(<span class="number">9.4</span>).setScale(<span class="number">2</span>, BigDecimal.ROUND_HALF_UP));</span><br><span class="line">        TreeSet&lt;BigDecimal&gt; sortedSet = <span class="keyword">new</span> TreeSet&lt;&gt;(Comparator.naturalOrder());</span><br><span class="line">        sortedSet.addAll(set);</span><br><span class="line">        System.out.println(sortedSet);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line">--------------------------------------------------------------------------------------------</span><br><span class="line">结果：[<span class="number">0.40</span>, <span class="number">1.20</span>, <span class="number">2.30</span>, <span class="number">2.40</span>, <span class="number">3.40</span>, <span class="number">9.40</span>]</span><br></pre></td></tr></table></figure><p>方法四：使用Stream</p><blockquote><p>这里使用Stream的时候可以转还成Set或者List，转换成Set的时候还需要再创建TreeSet，如果没有必须要求是Set，其实可以是直接转换成List，直接就是有序的，更加方便。</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">&gt; List list = set.stream().sorted(Comparator.naturalOrder()).collect(Collectors.toList());</span><br><span class="line">&gt;</span><br></pre></td></tr></table></figure></blockquote><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">StreamSetSortTest</span> </span>&#123;</span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title">main</span><span class="params">(String[] args)</span> </span>&#123;</span><br><span class="line">        Set&lt;BigDecimal&gt; set = <span class="keyword">new</span> HashSet&lt;&gt;();</span><br><span class="line">        set.add(<span class="keyword">new</span> BigDecimal(<span class="number">1.2</span>).setScale(<span class="number">2</span>, BigDecimal.ROUND_HALF_UP));</span><br><span class="line">        set.add(<span class="keyword">new</span> BigDecimal(<span class="number">2.3</span>).setScale(<span class="number">2</span>, BigDecimal.ROUND_HALF_UP));</span><br><span class="line">        set.add(<span class="keyword">new</span> BigDecimal(<span class="number">3.4</span>).setScale(<span class="number">2</span>, BigDecimal.ROUND_HALF_UP));</span><br><span class="line">        set.add(<span class="keyword">new</span> BigDecimal(<span class="number">2.4</span>).setScale(<span class="number">2</span>, BigDecimal.ROUND_HALF_UP));</span><br><span class="line">        set.add(<span class="keyword">new</span> BigDecimal(<span class="number">0.4</span>).setScale(<span class="number">2</span>, BigDecimal.ROUND_HALF_UP));</span><br><span class="line">        set.add(<span class="keyword">new</span> BigDecimal(<span class="number">9.4</span>).setScale(<span class="number">2</span>, BigDecimal.ROUND_HALF_UP));</span><br><span class="line">        Set newSet = set.stream().sorted(Comparator.naturalOrder()).collect(Collectors.toSet());</span><br><span class="line">        TreeSet&lt;Object&gt; treeSet = <span class="keyword">new</span> TreeSet&lt;&gt;();</span><br><span class="line">        treeSet.addAll(newSet);</span><br><span class="line">        System.out.println(treeSet);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line">--------------------------------------------------------------------------------------------</span><br><span class="line">结果：[<span class="number">0.40</span>, <span class="number">1.20</span>, <span class="number">2.30</span>, <span class="number">2.40</span>, <span class="number">3.40</span>, <span class="number">9.40</span>]</span><br></pre></td></tr></table></figure><h4 id="补充："><a href="#补充：" class="headerlink" title="补充："></a>补充：</h4><p>已知数值a，如果要求向上取值（即寻找顺序的Set集合中一个大于等于a的第一个元素，日常业务还是用到很多的，不到半斤算半斤(含)，超过半斤算一斤类似），可以借用set的floor方法，数值超出元素的最大值后会返回null。举例如下：</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">SetFloorMethod</span> </span>&#123;</span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title">main</span><span class="params">(String[] args)</span> </span>&#123;</span><br><span class="line">        Set&lt;BigDecimal&gt; set = <span class="keyword">new</span> HashSet&lt;&gt;();</span><br><span class="line">        set.add(<span class="keyword">new</span> BigDecimal(<span class="number">1.2</span>).setScale(<span class="number">2</span>, BigDecimal.ROUND_HALF_UP));</span><br><span class="line">        set.add(<span class="keyword">new</span> BigDecimal(<span class="number">2.3</span>).setScale(<span class="number">2</span>, BigDecimal.ROUND_HALF_UP));</span><br><span class="line">        set.add(<span class="keyword">new</span> BigDecimal(<span class="number">3.4</span>).setScale(<span class="number">2</span>, BigDecimal.ROUND_HALF_UP));</span><br><span class="line">        set.add(<span class="keyword">new</span> BigDecimal(<span class="number">2.4</span>).setScale(<span class="number">2</span>, BigDecimal.ROUND_HALF_UP));</span><br><span class="line">        set.add(<span class="keyword">new</span> BigDecimal(<span class="number">0.4</span>).setScale(<span class="number">2</span>, BigDecimal.ROUND_HALF_UP));</span><br><span class="line">        set.add(<span class="keyword">new</span> BigDecimal(<span class="number">9.4</span>).setScale(<span class="number">2</span>, BigDecimal.ROUND_HALF_UP));</span><br><span class="line">        TreeSet&lt;BigDecimal&gt; sortedSet = <span class="keyword">new</span> TreeSet&lt;&gt;(Comparator.naturalOrder());</span><br><span class="line">        sortedSet.addAll(set);</span><br><span class="line">        System.out.println(sortedSet);</span><br><span class="line">        BigDecimal value1 = sortedSet.ceiling(<span class="keyword">new</span> BigDecimal(<span class="number">0.5</span>));</span><br><span class="line">        System.out.println(<span class="string">"根据0.5可以取到元素："</span> + value1);</span><br><span class="line">        BigDecimal value2 = sortedSet.ceiling(<span class="keyword">new</span> BigDecimal(<span class="number">2.35</span>));</span><br><span class="line">        System.out.println(<span class="string">"根据2.35可以取到元素："</span> + value2);</span><br><span class="line">        BigDecimal value3 = sortedSet.ceiling(<span class="keyword">new</span> BigDecimal(<span class="number">11</span>));</span><br><span class="line">        System.out.println(<span class="string">"根据11可以取到元素："</span> + value3);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line">--------------------------------------------------------------------------------------------</span><br><span class="line">结果如下：</span><br><span class="line">[<span class="number">0.40</span>, <span class="number">1.20</span>, <span class="number">2.30</span>, <span class="number">2.40</span>, <span class="number">3.40</span>, <span class="number">9.40</span>]</span><br><span class="line">根据<span class="number">0.5</span>可以取到元素：<span class="number">1.20</span></span><br><span class="line">根据<span class="number">2.35</span>可以取到元素：<span class="number">2.40</span></span><br><span class="line">根据<span class="number">11</span>可以取到元素：<span class="keyword">null</span></span><br></pre></td></tr></table></figure>]]></content>
      
      
      
        <tags>
            
            <tag> Set、排序 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>建立Maven复合工程</title>
      <link href="/2019/04/20/work/%E5%BB%BA%E7%AB%8BMaven%E5%A4%8D%E5%90%88%E5%B7%A5%E7%A8%8B/"/>
      <url>/2019/04/20/work/%E5%BB%BA%E7%AB%8BMaven%E5%A4%8D%E5%90%88%E5%B7%A5%E7%A8%8B/</url>
      
        <content type="html"><![CDATA[<h4 id="搭建步骤"><a href="#搭建步骤" class="headerlink" title="搭建步骤"></a>搭建步骤</h4><ol><li><p>首先是<strong>建立父工程</strong>，可以使用 Spring Initializr 工具，直接一路默认就可以了，命名默认是：xxx-parent格式；</p></li><li><p>删除 .mvn , src , mvnw , mwnw.cmd 这几个文件，通过Spring Initializr建立文件时，会默认产生这几个文件，主要是为了防止你本地未安装maven，通过这几个mvn相关文件可以给你安装一个maven，父工程的src目录下是不写代码的，所以一并删除掉。</p></li><li><p>将进入pom文件，将这个项目GAV坐标下加一个<code>&lt;packaging&gt;</code>标签，表示以pom文件打包，这个主要目的是进行依赖传递等等。</p><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">packaging</span>&gt;</span>pom<span class="tag">&lt;/<span class="name">packaging</span>&gt;</span></span><br></pre></td></tr></table></figure></li><li><p><strong>建立子工程</strong>，选中父工程邮件——new——Module——maven——next(什么都不要填)——填写相关项目信息，完成。</p></li><li><p>可以看到在父工程和子工程里默认增加了相互依赖的关系：</p><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">&lt;!-- 父工程 --&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">modules</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">module</span>&gt;</span>Eureka-Server<span class="tag">&lt;/<span class="name">module</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">modules</span>&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="comment">&lt;!-- 子工程 --&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">parent</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>cloud-parent<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">groupId</span>&gt;</span>com.anhe<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">version</span>&gt;</span>0.0.1-SNAPSHOT<span class="tag">&lt;/<span class="name">version</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">parent</span>&gt;</span></span><br></pre></td></tr></table></figure></li></ol><h4 id="其他说明"><a href="#其他说明" class="headerlink" title="其他说明"></a>其他说明</h4><p>按照上面步骤搭建完成的时候可以看到父工程里默认的parent依赖如下： </p><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">parent</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">groupId</span>&gt;</span>org.springframework.boot<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>spring-boot-starter-parent<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">version</span>&gt;</span>1.5.9.RELEASE<span class="tag">&lt;/<span class="name">version</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">relativePath</span>/&gt;</span> </span><br><span class="line"><span class="tag">&lt;/<span class="name">parent</span>&gt;</span>  </span><br><span class="line"><span class="tag">&lt;<span class="name">dependencies</span>&gt;</span></span><br></pre></td></tr></table></figure><p>还有<code>spring-boot-starter</code>和<code>spring-boot-starter-test</code>的依赖，这些都可以删除，可以将<dependencies>标签里的所有依赖都删除掉。</dependencies></p><p><properties>标签可以按如下配置</properties></p><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">properties</span>&gt;</span></span><br><span class="line">       <span class="tag">&lt;<span class="name">java.version</span>&gt;</span>1.8<span class="tag">&lt;/<span class="name">java.version</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">project.build.sourceEncoding</span>&gt;</span>UTF-8<span class="tag">&lt;/<span class="name">project.build.sourceEncoding</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">properties</span>&gt;</span></span><br></pre></td></tr></table></figure><p>如果是Cloud工程，需要添加如下配置：</p><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">dependencyManagement</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">dependencies</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">dependency</span>&gt;</span></span><br><span class="line">                <span class="tag">&lt;<span class="name">groupId</span>&gt;</span>org.springframework.cloud<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span><br><span class="line">                <span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>spring-cloud-starter-parent<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line">                <span class="tag">&lt;<span class="name">version</span>&gt;</span>Edgware.RELEASE<span class="tag">&lt;/<span class="name">version</span>&gt;</span></span><br><span class="line">                <span class="tag">&lt;<span class="name">type</span>&gt;</span>pom<span class="tag">&lt;/<span class="name">type</span>&gt;</span></span><br><span class="line">                <span class="tag">&lt;<span class="name">scope</span>&gt;</span>import<span class="tag">&lt;/<span class="name">scope</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;/<span class="name">dependency</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;/<span class="name">dependencies</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">dependencyManagement</span>&gt;</span></span><br></pre></td></tr></table></figure>]]></content>
      
      
      
        <tags>
            
            <tag> Maven复合工程 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>搭建Hexo博客，Github部署</title>
      <link href="/2019/04/19/work/%E6%90%AD%E5%BB%BAHexo%E5%8D%9A%E5%AE%A2%EF%BC%8C%E9%83%A8%E7%BD%B2%E5%88%B0Github%E4%B8%BB%E9%A1%B5/"/>
      <url>/2019/04/19/work/%E6%90%AD%E5%BB%BAHexo%E5%8D%9A%E5%AE%A2%EF%BC%8C%E9%83%A8%E7%BD%B2%E5%88%B0Github%E4%B8%BB%E9%A1%B5/</url>
      
        <content type="html"><![CDATA[<h4 id="介绍"><a href="#介绍" class="headerlink" title="介绍"></a>介绍</h4><p>Hexo是目前一个比较流行的博客框架，选这个博客框架的好处在于使用人群多，出现问题可以可以找到怎么解决，而且网上主题也比较多，有更多选择。</p><h4 id="搭建流程"><a href="#搭建流程" class="headerlink" title="搭建流程"></a>搭建流程</h4><ol><li><p>首先安装node.js，因为Hexo是是基于node.js的。访问nodejs.org，下载node LTS版本，即node.js的长支持(Long Time Support)版本,安装完查看npm版本</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">npm -v</span><br></pre></td></tr></table></figure></li><li><p>切换到root用户</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">sudo su</span><br></pre></td></tr></table></figure></li><li><p>安装npm淘宝镜像仓库，访问更快</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#</span><span class="bash"> -g 表示全局安装</span></span><br><span class="line">npm install -g cnpm --registry=https://registry.npm.taobao.org</span><br></pre></td></tr></table></figure></li><li><p>安装hexo客户端，并初始化</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#</span><span class="bash"> 安装hexo客户端</span></span><br><span class="line">cnpm install -g hexo-cli</span><br><span class="line"></span><br><span class="line"><span class="meta">#</span><span class="bash"> 验证是否安装成功，同时可以看见hexo是需要node的支持的</span></span><br><span class="line">hexo -v</span><br></pre></td></tr></table></figure></li><li><p>创建空文件夹，用于存放相关文件(note:必须为空的，隐藏文件也不行，最好的办法是新建)</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#</span><span class="bash"> 目前是在/Users/circleus目录下</span></span><br><span class="line">pwd</span><br><span class="line">-- /Users/circleus目录下</span><br><span class="line"></span><br><span class="line"><span class="meta">#</span><span class="bash"> 创建新文件夹</span></span><br><span class="line">mkdir blog</span><br><span class="line">cd blog</span><br></pre></td></tr></table></figure></li><li><p>初始化hexo，启动hexo</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#</span><span class="bash"> 初始化</span></span><br><span class="line">sudo hexo init</span><br><span class="line"></span><br><span class="line"><span class="meta">#</span><span class="bash"> 启动hexo,或者使用hexo s都可以</span></span><br><span class="line">hexo server</span><br></pre></td></tr></table></figure><p>启动后会返回在localhost:4000端口启动,这个时候可以上去看一下，的确是，已经启动成功了。</p><p><img src="/2019/04/19/work/搭建Hexo博客，部署到Github主页/./image-20190419235119618.png" alt="image-20190419235119618"></p></li><li><p>hexo的命令不多，只有如下几种：</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#</span><span class="bash"> 先用 control+c 退出运行状态，再使用hexo new 创建博客</span></span><br><span class="line">hexo new "我的第一篇博客文章"</span><br><span class="line"></span><br><span class="line"><span class="meta">#</span><span class="bash"> 使用vi编辑完成之后，需要回到blog根目录需要清理一下</span></span><br><span class="line">hexo clean</span><br><span class="line"></span><br><span class="line"><span class="meta">#</span><span class="bash"> 生成一下博客</span></span><br><span class="line">hexo generate</span><br><span class="line"></span><br><span class="line"><span class="meta">#</span><span class="bash"> 重新启动</span></span><br><span class="line">hexo s</span><br></pre></td></tr></table></figure></li><li><p>部署到github主页，创建新的仓库，名字必须是:<strong>名字.github.io</strong></p></li><li><p>需要在bolg目录下安装一个部署到github主页的插件</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">cnpm intall --save hexo-deployer-git</span><br></pre></td></tr></table></figure></li><li><p>编辑blog目录下的<code>_config.yml</code>文件，配置github主页。</p><figure class="highlight yaml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># Deployment</span></span><br><span class="line"><span class="comment">## Docs: https://hexo.io/docs/deployment.html</span></span><br><span class="line"><span class="attr">deploy:</span></span><br><span class="line"><span class="attr">  type:</span> <span class="string">git</span></span><br><span class="line"><span class="attr">  repo:</span> <span class="attr">https://github.com/tangyongshuang/tangyongshuang.github.io.git</span></span><br><span class="line"><span class="attr">  branch:</span> <span class="string">master</span></span><br></pre></td></tr></table></figure></li><li><p>部署到github主页</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#</span><span class="bash"> d表示deploy，部署</span></span><br><span class="line">hexo d</span><br></pre></td></tr></table></figure><p>再访问自己的github主页：<code>tangyongshuang.github.io</code>，就可以看到，已经正常呈现了。</p></li></ol><p><img src="/2019/04/19/work/搭建Hexo博客，部署到Github主页/./image-20190420000501859.png" alt="image-20190420000501859"></p>]]></content>
      
      
      
        <tags>
            
            <tag> Hexo搭建之道 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Hello World</title>
      <link href="/2019/04/19/work/hello-world/"/>
      <url>/2019/04/19/work/hello-world/</url>
      
        <content type="html"><![CDATA[<p>Welcome to <a href="https://hexo.io/" target="_blank" rel="noopener">Hexo</a>! This is your very first post. Check <a href="https://hexo.io/docs/" target="_blank" rel="noopener">documentation</a> for more info. If you get any problems when using Hexo, you can find the answer in <a href="https://hexo.io/docs/troubleshooting.html" target="_blank" rel="noopener">troubleshooting</a> or you can ask me on <a href="https://github.com/hexojs/hexo/issues" target="_blank" rel="noopener">GitHub</a>.</p><h2 id="Quick-Start"><a href="#Quick-Start" class="headerlink" title="Quick Start"></a>Quick Start</h2><h3 id="Create-a-new-post"><a href="#Create-a-new-post" class="headerlink" title="Create a new post"></a>Create a new post</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ hexo new <span class="string">"My New Post"</span></span><br></pre></td></tr></table></figure><p>More info: <a href="https://hexo.io/docs/writing.html" target="_blank" rel="noopener">Writing</a></p><h3 id="Run-server"><a href="#Run-server" class="headerlink" title="Run server"></a>Run server</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ hexo server</span><br></pre></td></tr></table></figure><p>More info: <a href="https://hexo.io/docs/server.html" target="_blank" rel="noopener">Server</a></p><h3 id="Generate-static-files"><a href="#Generate-static-files" class="headerlink" title="Generate static files"></a>Generate static files</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ hexo generate</span><br></pre></td></tr></table></figure><p>More info: <a href="https://hexo.io/docs/generating.html" target="_blank" rel="noopener">Generating</a></p><h3 id="Deploy-to-remote-sites"><a href="#Deploy-to-remote-sites" class="headerlink" title="Deploy to remote sites"></a>Deploy to remote sites</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ hexo deploy</span><br></pre></td></tr></table></figure><p>More info: <a href="https://hexo.io/docs/deployment.html" target="_blank" rel="noopener">Deployment</a></p>]]></content>
      
      
      
    </entry>
    
    
  
  
</search>
